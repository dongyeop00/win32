#include <windows.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, 
         WPARAM wParam, LPARAM lParam);

LPCTSTR lpszClass = TEXT("New Title Hong Gil Dong");

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, //WINAPI : 윈도우 프로그램이라는 의미
         LPSTR lpszCmdLine, int nCmdShow)                   //hInstance : 운영체제의 커널이 응용 프로그램에 부여한 ID
{                                                 //szCmdLine : 커멘트라인 상에서 프로그램 구동 시 전달된 문자열
   HWND   hwnd;                                     //iCmdShow : 윈도우가 화면에 출력될 형태
   MSG      msg;
   WNDCLASS WndClass;                                  //WndClass 라는 구조체 정의                            
   WndClass.style         = CS_HREDRAW | CS_VREDRAW;          //출력스타일 : 수직/수평의 변화시 다시 그림
   WndClass.lpfnWndProc   = WndProc;                      //프로시저 함수명
   WndClass.cbClsExtra      = 0;                         //O/S 사용 여분 메모리 (Class)
   WndClass.cbWndExtra      = 0;                         //O/s 사용 여분 메모리 (Window)
   WndClass.hInstance      = hInstance;                   //응용 프로그램 ID
   WndClass.hIcon         = LoadIcon(NULL, IDI_APPLICATION);    //아이콘 유형
   WndClass.hCursor      = LoadCursor(NULL, IDC_ARROW);       //커서 유형
   WndClass.hbrBackground   = (HBRUSH)GetStockObject(WHITE_BRUSH);//배경색   
   WndClass.lpszMenuName   = NULL;                         //메뉴 이름
   WndClass.lpszClassName   = lpszClass;                   //클래스 이름
   RegisterClass(&WndClass);                            //앞서 정의한 윈도우 클래스의 주소

   hwnd = CreateWindow(lpszClass,                         //윈도우가 생성되면 핸들(hwnd)이 반환
      lpszClass,                                     //윈도우 클래스, 타이틀 이름
      WS_OVERLAPPEDWINDOW,                            //윈도우 스타일
      100,                                  //윈도우 위치, x좌표
      50,                                  //윈도우 위치, y좌표
      620,                                  //윈도우 폭   
      620,                                  //윈도우 높이   
      NULL,                                        //부모 윈도우 핸들    
      NULL,                                        //메뉴 핸들
      hInstance,                                      //응용 프로그램 ID
      NULL                                          //생성된 윈도우 정보
   );
   ShowWindow(hwnd, nCmdShow);                            //윈도우의 화면 출력
   UpdateWindow(hwnd);                                  //O/S 에 WM_PAINT 메시지 전송

	while(GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);   
		DispatchMessage(&msg);   
	}   
	return (int)msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, 
			 WPARAM wParam, LPARAM lParam)     
{
	HDC hdc;
	PAINTSTRUCT ps;
	static bool left_button;
	static int x,y;
	static int oldX,oldY;


	switch (iMsg) 
	{
	case WM_CREATE:
		x=y=oldX=oldY=0;
		left_button=FALSE;
		break;

	case WM_MOUSEMOVE:
		x= LOWORD(lParam);
		y= HIWORD(lParam);
		InvalidateRect(hwnd,NULL,FALSE);
		break;


	case WM_LBUTTONDOWN:
		left_button=TRUE;
		InvalidateRect(hwnd,NULL,FALSE);
		break;

	case WM_LBUTTONUP:
		left_button=FALSE;
		InvalidateRect(hwnd,NULL,FALSE);
		break;

	case WM_RBUTTONDOWN:
		InvalidateRect(hwnd,NULL,TRUE);

	case WM_PAINT:
		hdc = BeginPaint(hwnd, &ps);
	
		if(left_button==TRUE){
			MoveToEx(hdc,oldX,oldY,NULL);
			LineTo(hdc,x,y);
		}
		oldX=x;
		oldY=y;
		EndPaint(hwnd,&ps);

		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	} 
	return DefWindowProc(hwnd, iMsg, wParam, lParam); 
}
